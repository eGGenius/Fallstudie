Input;;;;;;;;;;;;;;;;;;;;;;;;;;;;
CodeChanges;;;;;;;;;;;;;;;;;;;;;;;;;;;;
path;releasedInTag;new_file;renamed_file;deleted_file;title;additions;deletions;type;time;line;diff;Bugifxes per file;foundInTag;;;;;;;;;;;;;;;
resources/js/base/fbplugins/AttachmentsPlugins/AttachmentUpload.js;4.0.11;false;false;false;fixed issue where RefCombos where gets cleared after saving cached DynamicForms.;2;0;Bugfix;2020-10-20T12:17:17.000+02:00;813;"Ext.namespace( 'CP.ux.fbPlugin.AttachmentsPlugin' ); saveButton.setText( _( 'CP.upload' ) ); } else { - if ( this.type == 'File' ) { + if ( this.ciId.toLowerCase().indexOf( 'new' ) === -1 && this.type === 'File' ) { fileName = this.originalName; extension = this.extension; }";4;4.0.12;;;;;;;;;;;;;;;
resources/js/cockpit/fbplugins/DocumentManagementObjects/DocumentUpload.js;4.0.11;false;false;false;fixed issue where references could not be deleted via RefCombos in cached dynamicForms (solves #8804);1;4;Bugfix;2020-10-19T12:32:41.000+02:00;810;"Ext.namespace( 'CP.ux.fbPlugin.DocumentManagement' ); saveButton.setText( _( 'CP.upload' ) ); } else { - if ( this.type == 'File' ) { + if ( this.ciId.toLowerCase().indexOf( 'new' ) === -1 && this.type === 'File' ) { fileName = this.originalName; extension = this.extension; }";2;4.0.12;;;;;;;;;;;;;;;
resources/js/base/data/CiCache.js;4.0.11;false;false;false;logging for perl report module added (/data/log/perl/error.log);5;5;Enhancement;2020-10-12T15:30:10.000+02:00;653;"[].concat( formFieldNames ).forEach( function( formFieldName ) { rawData[ formUid ] = rawData[ formUid ] || this.getFormRawData( formUid ) || {}; var refDir = rawData[ formUid ][ formFieldName + ':refDir' ]; - var ciId = refDir == 'Dest' ? ciReference.CIR_CI_ID_DEST : ciReference.CIR_CI_ID_SRC; + var ciId = refDir === 'Dest' ? ciReference.CIR_CI_ID_DEST : ciReference.CIR_CI_ID_SRC; ciItem = null; if ( ciReference.CIR_CIST_ID == 21 && rawData[ formUid ][ formFieldName ] == ciId ) { @@ -663,12 +663,12 @@ else if ( ciReference.CIR_CIST_ID != 21 ) { rawData[ formUid ][ formFieldName ] = ciId; ciItem = this.getCiItem( ciId, context ); + rawData[ formUid ][ formFieldName + ':value' ] = ciId; + rawData[ formUid ][ formFieldName + ':initialValue' ] = ciId; + rawData[ formUid ][ baseFieldName ] = ciId; } if ( ciItem ) { var baseFieldName = CP.getBaseName( formFieldName ); - rawData[ formUid ][ formFieldName + ':value' ] = ciItem.CI_ID; - rawData[ formUid ][ formFieldName + ':initialValue' ] = ciItem.CI_ID; - rawData[ formUid ][ baseFieldName ] = ciItem.CI_ID; rawData[ formUid ][ baseFieldName + ':CI_KEY' ] = ciItem.CI_KEY; rawData[ formUid ][ baseFieldName + ':CI_NAME' ] = ciItem.CI_NAME; }";3;4.0.12;;;;;;;;;;;;;;;
resources/js/base/BaseView/FormView/DynamicForm.js;4.0.11;false;false;false;logging for perl report module added (/data/log/perl/error.log);3;2;Enhancement;2020-10-12T15:28:21.000+02:00;2924;"this.setFieldValue( fld.name, itemData[ attr[ 1 ] ] ); } }, this ); - - // update cache - CP.ciCache.updateRefCombo( this._formUid, field.name, newValue, oldValue, field.refDir, field.targetFieldName, itemData ); } + // update cache + CP.ciCache.updateRefCombo( this._formUid, field.name, newValue, oldValue, field.refDir, field.targetFieldName, itemData ); + // update associated property fields if ( ciItem && field.includeProperties ) { field.includeProperties.forEach( function ( ciptName ) {";0;4.0.12;;;;;;;;;;;;;;;
resources/js/base/form/ComboBox/LinkComboBox.js;4.0.11;false;false;false;logging for perl report module added (/data/log/perl/error.log);7;4;Enhancement;2020-10-12T15:27:16.000+02:00;233;"CP.form.LinkComboBox = Ext.extend( CP.form.ComboBox, { if ( Ext.isEmpty( this.value ) ) { linkTrigger.addClass( this._disabledClass ); } - else if ( this.linkAlwaysEnabled ) { + + if ( this.linkAlwaysEnabled ) { linkTrigger.addClass( this._alwaysEnabledClass ); } }";2;4.0.12;;;;;;;;;;;;;;;
resources/js/base/form/ComboBox/LinkComboBox/ReferenceComboBox.js;4.0.11;false;false;false;fixed issue in DynamicForm where default value didn't work (solves #8572);1;1;Bugfix;2020-10-08T11:34:50.000+02:00;754;"CP.form.ReferenceComboBox = Ext.extend( CP.form.LinkComboBox, { * Handle the trigger's click event -> jump to link target CI_ITEM */ onTrigger1Click: function() { - var ciId = this.getValue(), - ciKey, - ciName, + var ciId = this.getValue(), + ciKey = '', + ciName = '', rec, panelConfig; @@ -773,22 +773,25 @@ CP.form.ReferenceComboBox = Ext.extend( CP.form.LinkComboBox, { ciKey = this._lastCiKey; ciName = this._lastCiName; } + } + else { + ciId = 'NEW'; + } - panelConfig = { - ciId : ciId, - ciKey : ciKey, - ciName : ciName, - citName : this.ciType, - forceGenericView: this.linkTarget === 'CiBrowser', - targetArea : 'active' - }; - - if ( this.linkTarget !== 'DetailView' && this.linkTarget !== 'CiBrowser' && CP.isJson( this.linkTarget ) ) { - Ext.apply( panelConfig, Ext.decode( this.linkTarget ) ); - } + panelConfig = { + ciId : ciId, + ciKey : ciKey, + ciName : ciName, + citName : this.ciType, + forceGenericView: this.linkTarget === 'CiBrowser', + targetArea : 'active' + }; - CP.panelManager.addDetailPanel( panelConfig ); + if ( this.linkTarget !== 'DetailView' && this.linkTarget !== 'CiBrowser' && CP.isJson( this.linkTarget ) ) { + Ext.apply( panelConfig, Ext.decode( this.linkTarget ) ); } + + CP.panelManager.addDetailPanel( panelConfig ); }, clearValue: function() {";0;4.0.12;;;;;;;;;;;;;;;
perl/reporting/bin/report.pl;4.0.11;false;false;false;fixed issue where tree root item was loaded with out CI_CIST_ID causing issues in CiCache (solves #8571);1;1;Bugfix;2020-10-07T17:44:53.000+02:00;371;"sub getStoredQueryResult( $ ) { $cmdb->dbh->do( 'SET CURRENT QUERY OPTIMIZATION 2' ); $cmdb->dbh->{HandleError} = sub { + my $err = $cmdb->dbh->errstr; log_crit( $sql ); writeErrorToDb( $config, $cmdb->dbh->errstr ); - log_die( $cmdb->dbh->errstr ); + log_die( $err ); }; my $sth = $cmdb->dbh->prepare( $sql );";1;4.0.12;;;;;;;;;;;;;;;
perl/reporting/bin/report.pl;4.0.11;false;false;false;fixed issue where OnLoad events didn't work in standalone forms (solves #8766);1;2;Bugfix;2020-10-07T09:35:18.000+02:00;229;"sub exportRawXml( $$$$ ) { my $currentCiId=0; my $isSelfClosing=1; my $rowRef; + my $lastQuery; my $startTime = time; my $item = ""$schema.$tableAreaMapping{$tableArea}_item""; @@ -237,9 +238,20 @@ sub exportRawXml( $$$$ ) { $cmdb->dbh->do( 'SET CURRENT QUERY OPTIMIZATION 2' ); + + $cmdb->dbh->{Callbacks} = { + prepare => sub { + my ($dbh, $query, $attrs) = @_; + $lastQuery=$query; + return; + }, + }; + $cmdb->dbh->{HandleError} = sub { - writeErrorToDb( $config, $cmdb->dbh->errstr ); - croak( $cmdb->dbh->errstr ); + my $err = $cmdb->dbh->errstr; + log_crit( $lastQuery ); + writeErrorToDb( $config, $err ); + log_die( $err ); }; $propertySql = "" @@ -256,7 +268,7 @@ sub exportRawXml( $$$$ ) { ""; $referenceSql = "" - with t ( ci_id ) as ( $sql ) + with t ( ci_id, ci_key ) as ( $sql ) select distinct ref.cir_id,srcCiType.cit_name as cit_name_src,srcItem.ci_key as ci_key_src, rtype.cirt_name,destCiType.cit_name as cit_name_dest, destItem.ci_key as ci_key_dest,ref.cir_cist_id @@ -359,6 +371,7 @@ sub getStoredQueryResult( $ ) { $cmdb->dbh->do( 'SET CURRENT QUERY OPTIMIZATION 2' ); $cmdb->dbh->{HandleError} = sub { + log_crit( $sql ); writeErrorToDb( $config, $cmdb->dbh->errstr ); log_die( $cmdb->dbh->errstr ); };";3;4.0.12;;;;;;;;;;;;;;;
perl/base/Cockpit/Log.pm;4.0.11;false;false;false;fixed issue where TreeDataService returned incomplete data (solves #8778);1;4;;2020-10-06T15:43:32.000+02:00;27;"BEGIN { } use Carp; -use POSIX 'strftime'; +#use POSIX 'strftime'; use FindBin; use DBI; use DBD::DB2; use Cockpit::Config; use Cockpit::CI; +use Time::HiRes qw(time); +use Date::Format; my $log_levels = { 'DEBUG' => 1, @@ -44,7 +46,7 @@ my $log_levels = { my $log_level; my $max_log_level = 0; my $log_prefix = ''; -my $db_log = $FindBin::Script; +my $db_log = undef;#$FindBin::Script; sub set_log_level($); set_log_level(get_config_log_level()); @@ -276,7 +278,14 @@ sub log_msg($$) { chomp($msg); if ($fh) { - print $fh sprintf(""%s [%-5s] %s%s\n"", strftime('%Y-%m-%d %H:%M:%S', localtime), $severity, $log_prefix, $msg); + my $localtime = time; + my $timestamp = time2str( '%Y-%m-%d %H:%M:%S', $localtime); + my $msec; + $msec = sprintf( ""%.3f"", $localtime ); + ( $msec ) = ( $msec =~ /\d+\.(\d+)/ ); + $timestamp .= "".$msec""; + + print $fh sprintf(""%s [%-5s] %s%s\n"", $timestamp, $severity, $log_prefix, $msg); } if ($console) { if ($severity eq 'WARN' or $severity eq 'CRIT') {";0;4.0.12;;;;;;;;;;;;;;;
perl/reporting/bin/report.pl;4.0.11;false;false;false;CiBrowserOverview - make CI-ID column a normal integer one;2;0;Enhancement;2020-10-06T12:43:49.000+02:00;22;"use Cockpit::CI; use Cockpit::Tmp; use Cockpit::DB; use Archive::Zip; -use Carp qw( croak carp ); use Data::Dumper; use Scalar::Util qw(looks_like_number); use Time::HiRes qw(time); @@ -35,6 +34,8 @@ use File::Temp qw/ tempfile /; use File::Basename; use JSON; +$SIG{__DIE__} = sub { log_die(shift) }; + # Prototypes sub readJsonConfig( $ ); sub getStoredQueryResult( $ ); @@ -60,6 +61,9 @@ sub writeCsvRow( $$$\%\% ); sub closeFile( $ ); sub cdata( $ ); +# open log file +open_log( filename => '/data/log/perl/error.log', loglevel => 'DEBUG' ); + # initialize variables # flag to prevent infinite error logging @@ -72,7 +76,7 @@ my $args = getopt( qw( jsonFile|j=s ) ); my $tmpFileName; if ( !$args->{jsonFile} ) { - croak( 'Missing parameter --jsonFile!' ); + log_die( 'Missing parameter --jsonFile!' ); exit(1); } @@ -95,9 +99,6 @@ else { set_notesid( $config->{notesId} ); set_timestamp( $config->{timestamp} ); -# open log file TODO: check how to implement logging!!! -# open_log( filename => '/data/log/perl.log', loglevel => 'DEBUG' ); - my $mappingType = 'resourceBased'; # resourceBased || resultBased # map DB2 data types to report data types @@ -159,6 +160,8 @@ if ( not $config->{preserveOutputFile} ) { # close connection to CMDB $cmdb->disconnect(); +close_log(); + exit(0); @@ -357,7 +360,7 @@ sub getStoredQueryResult( $ ) { $cmdb->dbh->{HandleError} = sub { writeErrorToDb( $config, $cmdb->dbh->errstr ); - croak( $cmdb->dbh->errstr ); + log_die( $cmdb->dbh->errstr ); }; my $sth = $cmdb->dbh->prepare( $sql ); @@ -384,7 +387,7 @@ sub getStoredQueryResult( $ ) { ); # croak (-> die) doesn't work in this case... so we use kill to end the process - carp( $err ); + log_crit( $err ); kill 9, $$; } else { @@ -1174,6 +1177,8 @@ sub writeResultToDb( $$ ) { sub writeErrorToDb( $$ ) { my ( $config, $errorMsg ) = @_; + $cmdb->dbh->{'HandleError'} = undef; + # do not write anything to db if preserveOutputFile is set if ( not $config->{preserveOutputFile} ) { my $sql = """;1;4.0.12;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Predict how many Bugfixes per file depending on the other features;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;